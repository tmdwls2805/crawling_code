name: Code Check


on:
  push:
    branches-ignore: ["production"]
  pull_request:


jobs:
  lint:
    runs-on: ["self-hosted", "linux", "X64", "ci"]
    steps:
    - name: Pull commits
      uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      env:
        REQUIREMENTS_FILE: lint
      run: |
        source ~/.venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        source ~/.venv/bin/activate
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/flake8-matcher.json"
        fi
        python -m flake8 --ignore=C812,W503,C815,C816,W504
  
  typecheck:
    runs-on: ["self-hosted", "linux", "X64", "ci"]
    steps:
    - name: Pull commits
      uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      env:
        REQUIREMENTS_FILE: typecheck
      run: |
        source ~/.venv/bin/activate
        python -m pip install --upgrade pip
  
    - name: Type check with mypy
      run: |
        source ~/.venv/bin/activate
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/mypy-matcher.json"
        fi
        python -m mypy --no-color-output --disable-error-code "annotation-unchecked"
