name: Code Check

on:
  push:
    branches-ignore: ["production"]
  pull_request:

jobs:
  lint:
    runs-on: ["self-hosted", "Windows", "X64"]
    steps:
    - name: Set PowerShell Execution Policy
      shell: powershell
      run: Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force

    - name: Pull commits
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m venv .venv
        .venv\Scripts\activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        .venv\Scripts\activate
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/flake8-matcher.json"
        fi
        python -m flake8 --ignore=C812,W503,C815,C816,W504

  typecheck:
    runs-on: ["self-hosted", "Windows", "X64"]
    steps:
    - name: Set PowerShell Execution Policy
      shell: powershell
      run: Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force

    - name: Pull commits
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m venv .venv
        .venv\Scripts\activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Type check with mypy
      run: |
        .venv\Scripts\activate
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/mypy-matcher.json"
        fi
        python -m mypy --no-color-output ./gov24 --disable-error-code "annotation-unchecked"
